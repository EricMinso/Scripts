
; Fichier de configuration des tests automatiques
; Tous les chemins de répertoires doivent être relatifs au 'workspace', càd le dossier racine de l'espace de travail

[Reference]
Commande_CreationDonneesLogo = Exe\PythonExcelLogo.exe --modeLancement GOELAN --modeParsageEntete PAR_INDEX_DE_COLONNE  
Commande_Execution = Exe\Goelan_Reference.exe

[VersionTest]
Commande_CreationDonneesLogo = Exe\PythonExcelLogo.exe --modeLancement GOELAN --modeParsageEntete PAR_INDEX_DE_COLONNE
Commande_Execution = Exe\Goelan_Test.exe


;
; Conditions pour la découverte des tests et la bonne explorations de sous-répertoires par nose_test
;
; - respecter le format nose_test (méthodes à tester nommées *test*)
;   - si possible, uniquement des tests dans un fichier de test
;   - le nom de fichier doit démarrer aussi par test_
;
; - le répertoire 'racine' et les sous-répertoires doivent pouvoir être assimilés à un projet Python
; 	"For a project’s tests to be compatible with test discovery 
; 	they must all be importable from the top level directory of the project 
; 	(in other words, they must all be in Python packages)."
;   - les sous-répertoires doivent être "importables"
;   - il doit y avoir un __init__.py (même vide) dans chaque sous-répertoire à parcourir 
;   - un sous-répertoire sans __init__.py bloque l'exploration
;   - il ne doit pas y avoir de __init__.py dans le répertoire racine
;   - les noms de répertoires ne doivent pas contenir de point ('.'), de tiret haut ('-'), d'apostrophe, etc...
;   - les noms de répertoires ne doivent pas commencer par un chiffre
;
; - sous Linux : les fichiers *.py ne doivent pas être exécutables : chmod -R a-x *.py
; 
; - attention, parfois il est possible de rencontrer des problèmes non déterminés de découverte des tests :
;   - la découverte fonctionne sur C:, elle ne fonctionne pas sur Z:
;   - utiliser l'option -vv pour afficher la liste des tests
; 
; - attention à ne pas modifier, ni même garder ouvert des fichiers du 'workspace' Jenkins, 
;   ceci peut bloquer des futures 'updates'
;
; - Il peut être même intéressant de forcer l'effacement du workspace après chaque build 
;   en faisant un svn checkout au lieu d'un svn update
;
; python -m nose -vv --with-xunit --xunit-file="%FICHIER_SORTIE_XML%"
; - l'option -v affiche les infos de base
; - l'option -vv affiche la liste des tests détectés
; - l'option -vvv affiche les infos ultra-détaillées
;
